local RAYCAST_GROUPS = { hash("wall") }
local CLOSEST = { all = false }

go.property("color", vmath.vector4(0, 0, 0, 1))
go.property("max_distance", -300)
go.property("radius", 100)
go.property("enabled", true)

function init(self)
    self.shadow = factory.create("/shadows#spot")
    msg.post(self.shadow, "disable")
end

function final(self)
    go.delete(self.shadow)
end

function update(self, dt)
    go.set(msg.url(nil, self.shadow, "model"), "tint", self.color)
    go.set(self.shadow, "scale", vmath.vector3(self.radius / 100, self.radius / 100, 1))

    local wpos = go.get_world_position()
    local results = physics.raycast(wpos, wpos + vmath.vector3(0, self.max_distance, 0), RAYCAST_GROUPS, CLOSEST)
    if results ~= nil and self.enabled then
        for _,result in ipairs(results) do
            -- { --[[0000027FBDAC0410]]
            --     normal = vmath.vector3(1.1586089385673e-06, 1.1586089385673e-06, 1),
            --     fraction = 0.61937010288239,
            --     position = vmath.vector3(87.545631408691, -90.113975524902, -899.99969482422),
            --     group = hash: [wall],
            --     id = hash: [/walls/grey0]
            -- }
            msg.post(self.shadow, "enable")
            go.set_position(result.position + result.normal * 0.05, self.shadow)
            go.set_rotation(vmath.quat_axis_angle(result.normal, 0) * vmath.quat_rotation_x(math.pi / 2), self.shadow)
        end
    else
        msg.post(self.shadow, "disable")
    end
end
