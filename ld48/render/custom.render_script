local app_render = require("ld48.app.render")

function init(self)
    self.gui_pred = render.predicate({"gui"})

    self.model_pred = render.predicate({"model"})
    self.model_no_depth_pred = render.predicate({"model_no_depth"})

    self.tile_pred = render.predicate({"tile"})
    self.tile_no_depth_pred = render.predicate({"tile_no_depth"})

    self.text_pred = render.predicate({"text"})
    self.particle_pred = render.predicate({"particle"})

    self.clear_color = vmath.vector4(0, 0, 0, 0)
    self.clear_color.x = sys.get_config("render.clear_color_red", 0)
    self.clear_color.y = sys.get_config("render.clear_color_green", 0)
    self.clear_color.z = sys.get_config("render.clear_color_blue", 0)
    self.clear_color.w = sys.get_config("render.clear_color_alpha", 1)
end

function update(self)
    app_render.update_holo()

    render.set_depth_mask(true)
    render.set_stencil_mask(0xff)
    render.clear({[render.BUFFER_COLOR_BIT] = self.clear_color, [render.BUFFER_DEPTH_BIT] = 1, [render.BUFFER_STENCIL_BIT] = 0})

    render.set_viewport(0, 0, render.get_window_width(), render.get_window_height())

    app_render.update_window(render.get_window_width(), render.get_window_height())

    render.set_view(app_render.camera_view(true))
    render.set_projection(app_render.camera_perspective())
    render.set_depth_mask(true)
    render.enable_state(render.STATE_DEPTH_TEST)
    render.disable_state(render.STATE_STENCIL_TEST)
    render.disable_state(render.STATE_BLEND)
    render.enable_state(render.STATE_CULL_FACE)
    render.set_blend_func(render.BLEND_ONE, render.BLEND_ONE_MINUS_SRC_ALPHA)
    -- Opaque models
    render.draw(self.model_pred)
    render.disable_state(render.STATE_DEPTH_TEST)
    render.draw(self.model_no_depth_pred)
    render.enable_state(render.STATE_DEPTH_TEST)

    -- Alpha-blended sprites
    render.enable_state(render.STATE_BLEND)
    render.disable_state(render.STATE_CULL_FACE)
    render.draw(self.tile_pred)
    render.disable_state(render.STATE_DEPTH_TEST)
    render.draw(self.tile_no_depth_pred)
    render.enable_state(render.STATE_DEPTH_TEST)
    render.draw(self.particle_pred)
    render.draw_debug3d()

    -- Render UI
    render.set_depth_mask(false)
    render.disable_state(render.STATE_DEPTH_TEST)
    render.enable_state(render.STATE_BLEND)
    render.set_view(vmath.matrix4())
    render.set_projection(vmath.matrix4_orthographic(0, render.get_window_width(), 0, render.get_window_height(), -1, 1))

    render.enable_state(render.STATE_STENCIL_TEST)
    render.draw(self.gui_pred)
    render.draw(self.text_pred)
    render.disable_state(render.STATE_STENCIL_TEST)
end

function on_message(self, message_id, message)
    if message_id == hash("clear_color") then
        self.clear_color = message.color
    end
end
